{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "defaultValue": "[resourceGroup().location]",
      "type": "string",
      "metadata": {
        "description": "The location for all resources"
      }
    },
    "storageName": {
      "defaultValue": "[concat('store', uniqueString(resourceGroup().id))]",
      "type": "string",
      "metadata": {
        "description": "The name of the storage account"
      }
    }
    ,
    "cosmosAccountName": {
      "defaultValue": "[concat('account', uniqueString(resourceGroup().id))]",
      "type": "string",
      "metadata": {
        "description": "The name of the cosmos account name"
      }
    },
    "cosmosDatabaseName": {
      "defaultValue": "wuma",
      "type": "string",
      "metadata": {
        "description": "The name of the cosmos database"
      }
    },
    "cosmosContainerName": {
      "defaultValue": "telemetry",
      "type": "string",
      "metadata": {
        "description": "The name of the cosmos container"
      }
    },
    "functionsAppName": {
      "defaultValue": "[concat('functions', uniqueString(resourceGroup().id))]",
      "type": "string",
      "metadata": {
        "description": "The name of the functions app"
      }
    },
    "hostingPlanName": {
      "defaultValue": "[concat('plan', uniqueString(resourceGroup().id))]",
      "type": "string",
      "metadata": {
        "description": "The name of the app service plan"
      }
    },
    "appInsightsName": {
      "defaultValue": "[concat('insights', uniqueString(resourceGroup().id))]",
      "type": "string",
      "metadata": {
        "description": "The name of the app insights resource"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[parameters('storageName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {  
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "name": "[parameters('hostingPlanName')]",
      "location": "[parameters('location')]",
      "properties": {  
         "name": "[parameters('hostingPlanName')]",
         "computeMode": "Dynamic",
         "maximumElasticWorkerCount": 1,
         "targetWorkerCount": 1
      },
      "sku":{  
         "name": "Y1",
         "tier": "Dynamic",
         "size": "Y1",
         "family": "Y",
         "capacity": 1
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[parameters('functionsAppName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageName')),'2019-06-01').keys[0].value)]"
            },
            {
                "name": "WEBSITE_CONTENTSHARE",
                "value": "[toLower(parameters('functionsAppName'))]"
            },
            {
              "name": "Project",
              "value": "backend-functions"
            }
          ]
        }
      },
      "resources": [
        {
            "apiVersion": "2018-11-01",
            "name": "web",
            "type": "sourcecontrols",
            "dependsOn": [
              "[resourceId('Microsoft.Web/sites/', parameters('functionsAppName'))]"
            ],
            "properties": {
                "RepoUrl": "https://github.com/weol/wuma-backend.git",
                "branch": "master",
                "publishRunbook": true,
                "IsManualIntegration": true
            }
        }
      ]
    },
    {
      "apiVersion": "2015-05-01",
      "name": "[parameters('appInsightsName')]",
      "type": "Microsoft.Insights/components",
      "kind": "web",
      "location": "[parameters('location')]",
      "tags": {
          "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('functionsAppName'))]": "Resource"
      },
      "properties": {
          "Application_Type": "web",
          "ApplicationId": "[parameters('appInsightsName')]"
      }
  },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2020-03-01",
      "name": "[parameters('cosmosAccountName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Eventual",
          "maxStalenessPrefix": 1,
          "maxIntervalInSeconds": 5
        },
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0
          }
        ],
        "databaseAccountOfferType": "Standard"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2020-03-01",
      "name": "[concat(parameters('cosmosAccountName'), '/', parameters('cosmosDatabaseName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosAccountName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('cosmosDatabaseName')]"
        },
        "options": {}
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-03-01",
      "name": "[concat(parameters('cosmosAccountName'), '/', parameters('cosmosDatabaseName'), '/', parameters('cosmosContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosAccountName'), parameters('cosmosDatabaseName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('cosmosContainerName')]",
          "partitionKey": {
            "paths": [
              "/partitionKey"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "Consistent"
          }
        },
        "options": {}
      }
    }
  ],
  "outputs": {
    "functionsAppName": {
      "type": "string",
      "value": "[parameters('functionsAppName')]"
    }
  }
}